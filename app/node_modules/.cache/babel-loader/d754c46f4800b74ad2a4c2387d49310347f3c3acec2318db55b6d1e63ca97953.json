{"ast":null,"code":"var _jsxFileName = \"/home/my/React-Projects/ToDo/app/src/Components/Render.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Render = props => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toDos\",\n    children: [props.toDos.length !== 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ToDos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"isCompleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.toDos.map((toDo, indx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: toDo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `status-btn ${toDo.isCompleted ? 'incomplete' : 'complete'}`,\n              onClick: () => props.toggle({\n                type: 'TOGGLE',\n                payload: toDo.id\n              }),\n              children: ['Mark', \" \", toDo.isCompleted ? 'Incomplete' : 'Complete']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: () => setIsOpen(!isOpen),\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-btn\",\n              onClick: () => props.delete({\n                type: 'DELETE',\n                payload: toDo.id\n              }),\n              children: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, toDo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 43\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      update: props.update,\n      setIsOpen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(Render, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Render;\nexport default Render;\nvar _c;\n$RefreshReg$(_c, \"Render\");","map":{"version":3,"names":["useState","Modal","jsxDEV","_jsxDEV","Render","props","_s","isOpen","setIsOpen","className","children","toDos","length","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","toDo","indx","title","isCompleted","onClick","toggle","type","payload","id","delete","update","_c","$RefreshReg$"],"sources":["/home/my/React-Projects/ToDo/app/src/Components/Render.jsx"],"sourcesContent":["import { useState } from 'react'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport Modal from './Modal'\n\nconst Render = (props) => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div className=\"toDos\">\n            {props.toDos.length !== 0 && (<table className='table table-bordered table-striped text-center'>\n                <thead>\n                    <tr>\n                        <th>ToDos</th>\n                        <th>isCompleted</th>\n                        <th colSpan={2}>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.toDos.map((toDo, indx) => (\n                        <tr key={toDo.id}>\n                            <td>{toDo.title}</td>\n                            <td>{\n                                <button className={`status-btn ${toDo.isCompleted ? 'incomplete' : 'complete'}`} onClick={() => props.toggle({ type: 'TOGGLE', payload: toDo.id })}>\n                                    {'Mark'} {toDo.isCompleted ? 'Incomplete' : 'Complete'}\n                                </button>\n                            }</td>\n                            <td>{\n                                <button className='update-btn' onClick={() => setIsOpen(!isOpen)}>update</button>\n                            }</td>\n                            <td>{\n                                <button className='remove-btn' onClick={() => props.delete({ type: 'DELETE', payload: toDo.id })}>remove</button>\n                            }</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>)}\n            {isOpen && <Modal update={props.update} setIsOpen />}\n        </div>\n    )\n}\n\nexport default Render"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}