{"ast":null,"code":"var _jsxFileName = \"/home/my/React-Projects/ToDo/app/src/Components/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  toDos: []\n};\nconst reducer = (state, action) => {\n  if (action.type === 'CREATE') {\n    /*#__PURE__*/_jsxDEV(\"state\", {\n      className: \"toDos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  }\n};\nconst Form = props => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [toDo, dispatch] = useReducer(reducer, initState);\n  const submitHandler = e => {\n    e.preventDefault();\n    title ? dispatch({\n      type: 'CREATE'\n    }) : alert('Please insert todo before submit');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"todo\",\n          children: \"Create ToDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"MKkItTvT/S5i1nBAyvSzXTD5o0U=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useReducer","useState","jsxDEV","_jsxDEV","initState","toDos","reducer","state","action","type","className","fileName","_jsxFileName","lineNumber","columnNumber","Form","props","_s","title","setTitle","toDo","dispatch","submitHandler","e","preventDefault","alert","children","onSubmit","htmlFor","onChange","target","value","_c","$RefreshReg$"],"sources":["/home/my/React-Projects/ToDo/app/src/Components/Form.jsx"],"sourcesContent":["import { useReducer, useState } from \"react\"\n\nconst initState = {\n    toDos: []\n}\n\nconst reducer = (state, action) => {\n    if (action.type === 'CREATE') {\n        <state className=\"toDos\"></state>\n    }\n}\n\nconst Form = (props) => {\n    const [title, setTitle] = useState('')\n    const [toDo, dispatch] = useReducer(reducer, initState)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        title ? dispatch({ type: 'CREATE' }) : alert('Please insert todo before submit')\n        \n    }\n\n    return (\n        <div>\n            <form action=\"\" onSubmit={submitHandler}>\n                <div className=\"input-box\">\n                    <label htmlFor=\"todo\">Create ToDo</label>\n                    <input type=\"text\" onChange={e => setTitle(e.target.value)} />\n                </div>\n                <div className=\"button\">\n                    <button>Create</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Form"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,aAAAN,OAAA;MAAOO,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EACrC;AACJ,CAAC;AAED,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,IAAI,EAAEC,QAAQ,CAAC,GAAGrB,UAAU,CAACM,OAAO,EAAEF,SAAS,CAAC;EAEvD,MAAMkB,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,KAAK,GAAGG,QAAQ,CAAC;MAAEZ,IAAI,EAAE;IAAS,CAAC,CAAC,GAAGgB,KAAK,CAAC,kCAAkC,CAAC;EAEpF,CAAC;EAED,oBACItB,OAAA;IAAAuB,QAAA,eACIvB,OAAA;MAAMK,MAAM,EAAC,EAAE;MAACmB,QAAQ,EAAEL,aAAc;MAAAI,QAAA,gBACpCvB,OAAA;QAAKO,SAAS,EAAC,WAAW;QAAAgB,QAAA,gBACtBvB,OAAA;UAAOyB,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAW;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzCX,OAAA;UAAOM,IAAI,EAAC,MAAM;UAACoB,QAAQ,EAAEN,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACO,MAAM,CAACC,KAAK;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACNX,OAAA;QAAKO,SAAS,EAAC,QAAQ;QAAAgB,QAAA,eACnBvB,OAAA;UAAAuB,QAAA,EAAQ;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAG,EAAA,CAvBKF,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAyBV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}